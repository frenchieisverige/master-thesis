
better cmd line
* http://vorpal.js.org/
* http://stackoverflow.com/questions/34414603/how-to-integrate-node-module-vorpal-and-blessed

* ascii https://github.com/guo-yu/ascii

* tutorial how to do your own 'million dollar page'

* after rebuilding assets it should say ready

* add keybiding to 'focus' on console
* add welcome message and explanation that console is dragable

* add small ascii icons to the available services

* generate correct error for solidity errors
* so the backtrace of actual errors can still be printed

* display spinning animation when deploying

* api to check if there is a new version of embark available!
** check if there is any sort of connection
** check if the version number in a certain branch

* add a version method

* restablish connection to ethereum node should
** redeploy contracts
** warn in console

* add to: to whisper

* supported react

* save logs in .embark 

* checkGas cmd to console to check the gas costs for a contract
* include gas estimates in EmbarkJS
* display in logs with how much gas a contract was deployed


* support copying to a directory
 "*": ["app/html/*"],
 "html/*": ["app/html/*"],

* use solc loadRemoteVersion functionality

* do a test api for whisper and ipfs

* support es6, esx, etc..

* write plugins

https://github.com/ConsenSys/eth-lightwallet

* test contract import

* support a port option for embark run

* make dashboard optional



* support creating a boilerplate app in the same directory
** useful for migrations

* ga to find relationships between opcodes

* use development settings in simulator
* or add a simulator environment

* contract not redeploying when gas config changes

* save codeHash or code itself in the chains file
* save transactionHash in the chains file

* detect typical error messages and add explanations

* add a msg explaining the console window is scrollable

* try go guess gas values for contract deployments that have arguments

* https://jsfiddle.net/zkm1jy9y/

* include app name on package.json

* run console commands inside the embark console (e.g git)

* detect if environment is not known

* add solc to available services
* or a 'versions' command to list the stack

